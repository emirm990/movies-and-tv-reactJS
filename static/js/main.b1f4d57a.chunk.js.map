{"version":3,"sources":["components/Item.js","components/Movies.js","components/MovieDetail.js","components/Details.js","App.js","serviceWorker.js","index.js"],"names":["Item","_this","this","react_default","a","createElement","Link","to","pathname","id","props","tvOrMovie","onClick","handleClick","className","src","alt","title","Component","Movies","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","results","clickedId","searchValue","getId","bind","assertThisInitialized","moviesOrTv","fetch","response","json","setState","event","target","value","length","history","push","undefined","location","fetchMovies","_this2","clearSearch","onChange","e","search","type","placeholder","slice","map","result","src_components_Item","key","poster_path","name","MovieDetails","localId","localStorage","getItem","localTvOrMovie","console","log","trailer","poster","overview","apiKey","videos","videosJson","setItem","style","boxShadow","width","height","frameBorder","allow","allowFullScreen","Details","MovieDetail","App","BrowserRouter","basename","process","Switch","Route","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b1f4d57a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Item.css\";\r\n\r\nclass Item extends Component {\r\n  render() {\r\n    return (\r\n      <Link\r\n        to={{\r\n          pathname: \"/details/\",\r\n          id: this.props.id,\r\n          tvOrMovie: this.props.tvOrMovie\r\n        }}\r\n        onClick={id => this.props.handleClick(this.props.id)}\r\n        className='card col-6 col-sm-6 col-md-4 col-lg-3 mb-3'\r\n      >\r\n        <img\r\n          className='card-img-top img-fluid'\r\n          src={\"http://image.tmdb.org/t/p/w400/\" + this.props.src}\r\n          alt={this.props.title}\r\n        />\r\n        <h5 className='card-title text-center mt-3'>{this.props.title}</h5>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from \"react\";\r\nimport Item from \"./Item.js\";\r\nimport \"./Movies.css\";\r\n\r\nclass Movies extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getId = this.getId.bind(this);\r\n  }\r\n  state = {\r\n    results: null,\r\n    tvOrMovie: \"tv\",\r\n    clickedId: null,\r\n    searchValue: \"\"\r\n  };\r\n\r\n  async fetchMovies(moviesOrTv) {\r\n    let apiKey = \"fdcceaee503d65d10f646f384fbc9aec\";\r\n    let response = await fetch(\r\n      \"https://api.themoviedb.org/3/\" +\r\n        moviesOrTv +\r\n        \"/top_rated?api_key=\" +\r\n        apiKey +\r\n        \"&language=en-US&page=1\"\r\n    );\r\n    let json = await response.json();\r\n    this.setState({ results: json.results, tvOrMovie: moviesOrTv });\r\n  }\r\n\r\n  async search(event) {\r\n    this.setState({\r\n      searchValue: event.target.value\r\n    });\r\n    if (event.target.value.length > 2) {\r\n      let response = await fetch(\r\n        \"https://api.themoviedb.org/3/search/\" +\r\n          this.state.tvOrMovie +\r\n          \"?api_key=fdcceaee503d65d10f646f384fbc9aec&language=en-US&query=\" +\r\n          event.target.value +\r\n          \"&page=1&include_adult=false\"\r\n      );\r\n      let json = await response.json();\r\n      this.setState({\r\n        results: json.results\r\n      });\r\n    }\r\n  }\r\n  clearSearch() {\r\n    this.setState({\r\n      searchValue: \"\"\r\n    });\r\n  }\r\n  getId(id) {\r\n    this.setState({ clickedId: id });\r\n    this.props.history.push(id);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.history.location.results === undefined) {\r\n      this.fetchMovies(\"tv\");\r\n    } else {\r\n      this.setState({\r\n        results: this.props.history.location.results,\r\n        tvOrMovie: this.props.history.location.tvOrMovie,\r\n        searchValue: this.props.history.location.searchValue\r\n      });\r\n    }\r\n    this.props.history.push(this.state);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.history.push(this.state);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='container-fluid mb-3 mt-3'>\r\n          <button\r\n            className={\r\n              this.state.tvOrMovie === \"movie\" ? \"btn btn-primary\" : \"btn\"\r\n            }\r\n            onClick={() => {\r\n              this.fetchMovies(\"movie\");\r\n              this.clearSearch();\r\n            }}\r\n          >\r\n            Movies\r\n          </button>\r\n          <button\r\n            className={\r\n              this.state.tvOrMovie === \"tv\" ? \"btn btn-primary\" : \"btn\"\r\n            }\r\n            onClick={() => {\r\n              this.fetchMovies(\"tv\");\r\n              this.clearSearch();\r\n            }}\r\n          >\r\n            TV Shows\r\n          </button>\r\n          <hr />\r\n        </div>\r\n        <div className='container-fluid mb-3'>\r\n          <input\r\n            onChange={e => this.search(e)}\r\n            className='form-control'\r\n            id='search'\r\n            type='search'\r\n            placeholder='search'\r\n            value={this.state.searchValue}\r\n          />\r\n        </div>\r\n        <div className='container-fluid'>\r\n          <div className='row'>\r\n            {this.state &&\r\n              this.state.results &&\r\n              this.state.results\r\n                .slice(0, 10)\r\n                .map(result => (\r\n                  <Item\r\n                    handleClick={this.getId}\r\n                    key={result.id}\r\n                    id={result.id}\r\n                    tvOrMovie={this.state.tvOrMovie}\r\n                    src={result.poster_path}\r\n                    title={result.title || result.name}\r\n                  />\r\n                ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./iframe.css\";\r\nclass MovieDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const localId = localStorage.getItem(\"id\");\r\n    const localTvOrMovie = localStorage.getItem(\"tvOrMovie\");\r\n    console.log(localId, localTvOrMovie);\r\n    if (localId) {\r\n      this.state = {\r\n        id: localId,\r\n        tvOrMovie: localTvOrMovie\r\n      };\r\n    } else {\r\n      this.state = {\r\n        id: null,\r\n        trailer: null,\r\n        poster: null,\r\n        name: \"name\",\r\n        overview: \"overview\"\r\n      };\r\n    }\r\n  }\r\n\r\n  async id(id, tvOrMovie) {\r\n    let apiKey = \"fdcceaee503d65d10f646f384fbc9aec\";\r\n    let response = await fetch(\r\n      \"https://api.themoviedb.org/3/\" +\r\n        tvOrMovie +\r\n        \"/\" +\r\n        id +\r\n        \"?api_key=\" +\r\n        apiKey +\r\n        \"&append_to_response=videos&language=en-US\"\r\n    );\r\n    let json = await response.json();\r\n\r\n    let videos = await fetch(\r\n      \"https://api.themoviedb.org/3/\" +\r\n        tvOrMovie +\r\n        \"/\" +\r\n        id +\r\n        \"/videos?api_key=\" +\r\n        apiKey\r\n    );\r\n    let videosJson = await videos.json();\r\n\r\n    if (\r\n      videosJson.results.length > 0 &&\r\n      videosJson.results[0].type === \"Trailer\"\r\n    ) {\r\n      this.setState({\r\n        trailer: videosJson.results[0].key\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      poster: json.poster_path,\r\n      name: json.name || json.title,\r\n      overview: json.overview\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    console.log(localStorage.id, localStorage.tvOrMovie);\r\n    if (this.props.id === undefined || this.props.tvOrMovie === undefined) {\r\n      this.id(localStorage.id, localStorage.tvOrMovie);\r\n    } else {\r\n      this.id(this.props.id, this.props.tvOrMovie);\r\n    }\r\n    this.setState({ id: this.props.id });\r\n    console.log(localStorage.id, localStorage.tvOrMovie);\r\n  }\r\n  componentWillUnmount() {\r\n    localStorage.setItem(\"id\", this.state.id);\r\n    localStorage.setItem(\"tvOrMovie\", this.props.tvOrMovie);\r\n    console.log(localStorage.id, localStorage.tvOrMovie);\r\n  }\r\n  render() {\r\n    if (this.state.trailer != null) {\r\n      return (\r\n        <div className='container-fluid mb-3 mt-3'>\r\n          <Link to={\"/\"}>\r\n            <button className='btn btn-primary'>Back</button>\r\n          </Link>\r\n          <hr />\r\n          <div className='row justify-content-center '>\r\n            <div className='col-xl-4 col-lg-6 col-md-8 col-sm-9'>\r\n              <div className='card ' style={{ boxShadow: \"1px 1px 1px #fff\" }}>\r\n                <div className='videoWrapper'>\r\n                  <iframe\r\n                    title='trailer'\r\n                    id='video'\r\n                    width='560'\r\n                    height='315'\r\n                    src={\"https://www.youtube.com/embed/\" + this.state.trailer}\r\n                    frameBorder='0'\r\n                    allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture'\r\n                    allowFullScreen\r\n                  />\r\n                </div>\r\n                <div className='card-body'>\r\n                  <h4 className='card-title text-center mt-3'>\r\n                    {this.state.name}\r\n                  </h4>\r\n                  <p className='card-text px-3 -pb-2'>{this.state.overview}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className='container-fluid mb-3 mt-3'>\r\n          <Link to={\"/\"}>\r\n            <button className='btn btn-primary'>Back</button>\r\n          </Link>\r\n          <hr />\r\n          <div className='row justify-content-center '>\r\n            <div className='col-xl-4 col-lg-6 col-md-8 col-sm-9'>\r\n              <div className='card ' style={{ boxShadow: \"1px 1px 1px #fff\" }}>\r\n                {this.state.poster ? (\r\n                  <img\r\n                    className='card-img-top img-fluid'\r\n                    src={\"http://image.tmdb.org/t/p/w400/\" + this.state.poster}\r\n                    alt={this.state.name}\r\n                  />\r\n                ) : null}\r\n\r\n                <div className='card-body'>\r\n                  <h4 className='card-title text-center mt-3'>\r\n                    {this.state.name}\r\n                  </h4>\r\n                  <p className='card-text px-3 -pb-2'>{this.state.overview}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default MovieDetails;\r\n","import React, { Component } from \"react\";\r\nimport MovieDetail from \"./MovieDetail\";\r\n\r\nclass Details extends Component {\r\n  componentDidMount() {\r\n    this.setState({\r\n      id: this.props.location.id,\r\n      results: this.props.history.location.results,\r\n      tvOrMovie: this.props.history.location.tvOrMovie,\r\n      searchValue: this.props.history.location.searchValue\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.history.push(this.state);\r\n  }\r\n  state = {\r\n    results: null\r\n  };\r\n  render() {\r\n    return (\r\n      <MovieDetail\r\n        id={this.props.location.id}\r\n        tvOrMovie={this.props.location.tvOrMovie}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Details;\r\n","import React, { Component } from \"react\";\r\nimport Movies from \"./components/Movies\";\r\nimport Details from \"./components/Details\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route path='/' component={Movies} exact />\r\n          <Route path='/details' component={Details} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}